@page
@model WeatherServerApi.MapModel
@{
    ViewData["Title"] = "Map";
}


<button onclick='loadMapScenario();'>Click meh</button>

<div id='printoutPanel'></div>

<div id='myMap' style='width: 500px; height: 500px; margin:0; padding:0;'></div>
<script type='text/javascript'>
    /* Global array of the Pushpins: */
    var pushpins = new Array(),
        measurements = new Array(),
        baseUrl = 'https://weerstation-server.herokuapp.com/',
        // baseUrl = '',
        map;

    function isDefined(val){ return typeof val !== undefined; }
    function isNull(val){ return typeof val === null; }

    function getHomeStations(){
         xmlHttpRequest({
            url: 'api/stations/',
            onload: initMap
        }); 
        //initMap(JSON.parse('[{"id": 3,"api": "44da835e-da80-4496-a759-b86f03e25d8f","name": "Jarek","owner": null,"color": "#0000ff","coordinate_X": 51.510743,"coordinate_Y": 4.284851},{"id": 4,"api": "c3562793-9b54-4564-8463-4d920301a295","name": "Frédérique","owner": null,"color": "#00ffff","coordinate_X": 51.828796,"coordinate_Y": 4.368672},{"id": 7,"api": "f67daefa-0924-47b6-9702-8fbbc125e007","name": "Timstation","owner": null,"color": "#ff0000","coordinate_X": 51.896095,"coordinate_Y": 4.628533},{"id": 8,"api": "bc0933f6-8983-4709-bfc0-b6a5ffbbe292","name": "Corné","owner": null,"color": "#0a1beb","coordinate_X": 51.9291187,"coordinate_Y": 4.5973773},{"id": 10,"api": "cdfdc310-3ae0-4c44-bd9e-058bcfc66901","name": "Tahsin","owner": null,"color": "#000000","coordinate_X": 52.0705,"coordinate_Y": 4.3007},{"id": 2,"api": "7edf5d65-c076-42d8-acbd-d0924de8c185","name": "Jurre","owner": null,"color": "#0000ff","coordinate_X": 51.851987,"coordinate_Y": 4.248637}]'))
    }

    function getMeasurements(){
         xmlHttpRequest({
            url: 'api/measurements/',
            onload: updateMeasurements
        }); 
        //updateMeasurements(JSON.parse('[{"id":2,"temperature":22.5,"humidity":50,"windSpeed":0,"station":3},{"id":3,"temperature":24.30,"humidity":41.00,"windSpeed":10,"station":3},{"id":4,"temperature":25.00,"humidity":39.00,"windSpeed":10,"station":3},{"id":5,"temperature":25.10,"humidity":38.00,"windSpeed":10,"station":3},{"id":6,"temperature":25.30,"humidity":37.00,"windSpeed":10,"station":3},{"id":7,"temperature":25.40,"humidity":37.00,"windSpeed":10,"station":3},{"id":8,"temperature":25.60,"humidity":36.00,"windSpeed":10,"station":3},{"id":9,"temperature":25.50,"humidity":36.00,"windSpeed":10,"station":3},{"id":10,"temperature":25.50,"humidity":36.00,"windSpeed":10,"station":3},{"id":11,"temperature":25.70,"humidity":37.00,"windSpeed":0,"station":3},{"id":12,"temperature":25.70,"humidity":36.00,"windSpeed":30,"station":3},{"id":13,"temperature":25.70,"humidity":36.00,"windSpeed":30,"station":3},{"id":14,"temperature":25.70,"humidity":36.00,"windSpeed":30,"station":3},{"id":15,"temperature":25.70,"humidity":36.00,"windSpeed":30,"station":3},{"id":16,"temperature":25.70,"humidity":36.00,"windSpeed":30,"station":3}]'));
    }

    function xmlHttpRequest(opt){
        var url = opt.url,
            onload = isDefined(opt.onload) ? opt.onload : function(json){ console.log(json); },
            onfail = isDefined(opt.onfail) ? opt.onfail : function(){ alert('Something went wrong during the XMLHttpRequest!'); },
            data = isDefined(opt.data) ? opt.data : {},
            contentType = isDefined(opt.contentType) ? opt.contentType : 'application/json'; 

        // Initiate XMLHttpRequest
        var xhr = new XMLHttpRequest();
        // Set method and URL
        xhr.open('GET', url);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.onload = function() {
            if (xhr.status === 200) {
                onload(JSON.parse(xhr.responseText));
            } else {
                onfail();
            }
        };
        xhr.send(JSON.stringify(data));
        // opt.onload(JSON.parse('[{"id": 3,"api": "44da835e-da80-4496-a759-b86f03e25d8f","name": "Jarek","owner": null,"color": "#ff0000","coordinate_X": 51.510743,"coordinate_Y": 4.284851},{"id": 4,"api": "c3562793-9b54-4564-8463-4d920301a295","name": "Frédérique","owner": null,"color": "#00ffff","coordinate_X": 51.828796,"coordinate_Y": 4.368672},{"id": 7,"api": "f67daefa-0924-47b6-9702-8fbbc125e007","name": "Timstation","owner": null,"color": "#ff0000","coordinate_X": 51.896095,"coordinate_Y": 4.628533},{"id": 8,"api": "bc0933f6-8983-4709-bfc0-b6a5ffbbe292","name": "Corné","owner": null,"color": "#0a1beb","coordinate_X": 51.9291187,"coordinate_Y": 4.5973773},{"id": 10,"api": "cdfdc310-3ae0-4c44-bd9e-058bcfc66901","name": "Tahsin","owner": null,"color": "#000000","coordinate_X": 52.0705,"coordinate_Y": 4.3007},{"id": 2,"api": "7edf5d65-c076-42d8-acbd-d0924de8c185","name": "Jurre","owner": null,"color": "#0000ff","coordinate_X": 51.851987,"coordinate_Y": 4.248637}]'));
        // opt.onload(JSON.parse('[{"id": 1, "name": "Corné", "color": "#6922BB", "coordinate_X": 51.9291187, "coordinate_Y": 4.5973773, "temperature": 21.5, "humidity": 33.2 }]'));
    }

    
    class Pushpin {
                        
        constructor(opt){
            this.id = opt.id;
            this.location = new Microsoft.Maps.Location(opt.geoX, opt.geoY);
            this.pin = new Microsoft.Maps.Pushpin(this.location, {
                title: opt.title,
                subTitle: opt.subTitle,
                text: opt.text,
                color: opt.color
            });
            this.color = opt.color;

            /*Make this object accessible inside the mouse event function ('this' will refer to another object in that scope) */
            var pushpin = this;

            /*Add the pushpin to the map */
            opt.map.entities.push(this.pin);

            /*Add mouse events to the pushpin. */
            Microsoft.Maps.Events.addHandler(this.pin, 'click', function () {
                /*Open new page */
                var url = baseUrl + 'api/measurements/' + pushpin.id;
                window.open(url, '_blank');
            });
            /*Return the pushpin object */
            return this;
        }
    }

    function initMap(json){
        // Initiate map and set it to global 'map'
        map = new Microsoft.Maps.Map(document.getElementById('myMap'), {});

        // Predefine totals of the geo-coordinates
        var totalX = 0, totalY = 0; 

        // Read Json and create pushpins
        for(var index in json){
            var object = json[index],
				pushpin = new Pushpin({
                    id: object.id,
                    geoX: object.coordinate_X, geoY: object.coordinate_Y,
					/* geoX: 51.9291187, geoY: 4.5973773, */
                    title: object.name,
                    subTitle: '',
                    text: object.name[0],
                    color: object.color,
                    map: map
                });
            
            // Add pushpin to array of pushpins
            pushpins[object.id] = pushpin;
            measurements[object.id] = '';

            // Increment totals of geo-coordinates
            totalX+= object.coordinate_X;
            totalY+= object.coordinate_Y;
			console.log('Im where I want to be!');
        }
	
        // Divide total of geo-coordinates by amount of pushpins to get the average geo-location
        var averageX = totalX / json.length,
            averageY = totalY / json.length;
        
        // Set center of map:
        map.setView({
            center: new Microsoft.Maps.Location( averageX, averageY), // 51.9291187, 4.5973773 
            zoom: 10
        });

        // Update values of measurements every 60 seconds
        getMeasurements();
        setInterval(getMeasurements, 60 * 1000 ); // 60 seconds
    }

    function updateMeasurements(json){
        // Clear measurements
        for(var index in measurements){ measurements[index] = ''; }

        // Update measurements
        for(var index in json){
            var object = json[index],
                // Get basic information
                id = object.station,
                temperature = object.temperature,
                humidity = object.humidity,
                windSpeed = object.windSpeed,
                pushpin = pushpins[id],
                measurement = '';
                
            
            // Do not add data to subtitle if a null-value is given
            if(isDefined(temperature) && !isNull(temperature)) measurement = measurement+'T: '+temperature.toString()+' °C ';
            if(isDefined(humidity) && !isNull(humidity)) measurement = measurement+'H: '+humidity.toString()+' %';
            if(isDefined(windSpeed) && !isNull(windSpeed)) measurement = measurement+'W: '+windSpeed.toString()+' km/u';

            measurements[id] = measurement;
            
        }

        // Process measurements
        for(var id in pushpins){
            var pushpin = pushpins[id],
                measurement = measurements[id];

            // If no values are given, subtitle is still empty
            if(measurement.length === 0){
                pushpin.pin.setOptions({
                    subTitle: 'Offline.',
                    color: 'red'
                });
            } else {
                pushpin.pin.setOptions({
                    subTitle: measurement,
                    color: pushpin.color
                });
            }

        }
    }

    function loadMapScenario() {
        // Get all data about the Home Stations and init map (incl. pushpins) */
        getHomeStations();
        /* xmlHttpRequest({
            url: 'api/stations/',
            onload: initMap
        }); */
    }

</script>

<script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?key=Arqsw64sC6P3jNxXk9HJ_IrUhNfI8e1MjgVSC2QuMiqo3nxvmNS-CduSkOUnRmOu&callback=loadMapScenario' async defer></script>

